# !! generated by puppet !!
#
# Configuration adopted for OpenVZ. See http://wiki.openvz.org/Quick_installation
#
# $Id: $
#

# Kernel sysctl configuration file for Red Hat Linux
#
# For binary values, 0 is disabled, 1 is enabled.  See sysctl(8) and
# sysctl.conf(5) for more details.

# Controls source route verification
net.ipv4.conf.default.rp_filter = 1

# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0

# Controls whether core dumps will append the PID to the core filename
# Useful for debugging multi-threaded applications
kernel.core_uses_pid = 1

# Controls the use of TCP syncookies
net.ipv4.tcp_syncookies = 1

# Controls the maximum size of a message, in bytes
kernel.msgmnb = 65536

# Controls the default maxmimum size of a mesage queue
kernel.msgmax = 65536

# Controls the maximum shared segment size, in bytes
kernel.shmmax = 68719476736

# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 4294967296

# OpenVZ configuration according to http://wiki.openvz.org/Quick_installation
# On Hardware Node we generally need
# packet forwarding enabled and proxy arp disabled
net.ipv4.ip_forward = 1
net.ipv6.conf.default.forwarding = 1
net.ipv6.conf.all.forwarding = 1
net.ipv4.conf.default.proxy_arp = 0

# Enables source route verification
net.ipv4.conf.all.rp_filter = 1

# Enables the magic-sysrq key
kernel.sysrq = 1

# We do not want all our interfaces to send redirects
net.ipv4.conf.default.send_redirects = 1
net.ipv4.conf.all.send_redirects = 0

fs.file-max = 1000000
## security

# Disable uptime detection from external mashines.
# The world doesnt have to know how old our kernels are ;-)
net.ipv4.tcp_timestamps = 0

# ExecShield is a buildin protection against buffer overflow.
# Its enabled by default, but we want to be sure.
kernel.exec-shield = 1

# Randomize memory usage. Enabled by default, but we want to be sure.
kernel.randomize_va_space

